# Python
import sys
sys.path.insert(0, '../')
from QuESTFunc import *
from QuESTCore import *

def run_tests():

    QubitsA = createDensityQureg(2,Env)
    QubitsB = createDensityQureg(2,Env)
    args = [QubitsA,0.5,QubitsB]

    initDebugState(args[2])
    addDensityMatrix(*args)

    state = 0
    passed = True

    expectArray = [Complex(0.5000000000000,0.0500000000000),
                Complex(0.1000000000000,0.1500000000000),
                Complex(0.2000000000000,0.2500000000000),
                Complex(0.3000000000000,0.3500000000000),
                Complex(0.4000000000000,0.4500000000000),
                Complex(0.5000000000000,0.5500000000000),
                Complex(0.6000000000000,0.6500000000000),
                Complex(0.7000000000000,0.7500000000000),
                Complex(0.8000000000000,0.8500000000000),
                Complex(0.9000000000000,0.9500000000000),
                Complex(1.0000000000000,1.0500000000000),
                Complex(1.1000000000000,1.1500000000000),
                Complex(1.2000000000000,1.2500000000000),
                Complex(1.3000000000000,1.3500000000000),
                Complex(1.4000000000000,1.4500000000000),
                Complex(1.5000000000000,1.5500000000000)]

    
    myStartIndex = QubitsA.chunkId * QubitsA.numAmpsPerChunk
    myEndIndex   = myStartIndex + QubitsA.numAmpsPerChunk
    
    for expect in expectArray[myStartIndex:myEndIndex]:
        result = Complex(args[0].stateVec.real[state], args[0].stateVec.imag[state])
        passed = passed and testResults.compareComplex(result,expect)
        if not passed: testResults.log("Amp {} does not match:\n {} {}".format(state, result, expect))
        state += 1
    testResults.validate(passed, "Debug-Zero test")
